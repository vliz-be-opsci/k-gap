# docker compose env variables
COMPOSE_PROJECT_NAME=kgap

#graphdb env variables
GDB_REPO=kgap
REPOLABEL=label_repo_here
GDB_HOME_FOLDER=/opt/graphdb/home
GDB_MAX_HEADER=65536
GDB_JAVA_OPTS="-Xms8g -Xmx16g -Dcom.ontotext.graphdb.monitoring.jmx=true"

#jupyter env variables
SRC_FOLDER=/kgap/notebooks

# sembench env variables
# NOTE -- these deprecated variants:
# INPUT_DATA_LOCATION=/data
# OUTPUT_DATA_LOCATION=/data
# SEMBENCH_DATA_LOCATION=/data
# NOTE -- should be changed to:
SEMBENCH_INPUT_PATH=/data
SEMBENCH_OUTPUT_PATH=/data
SEMBENCH_HOME_PATH=/data
SEMBENCH_CONFIG_PATH=/data/sembench.yaml
SCHEDULER_INTERVAL_SECONDS=86400

# ldes-coordinator env variables
# The coordinator watches a folder for YAML config files and spawns
# ldes-consumer containers for each feed configuration

# Folder path for LDES feed configurations (coordinator mode)
LDES_CONFIG_PATH=/data/ldes-feeds

# Logging level
LOG_LEVEL=INFO

# Consumer instance environment variables (automatically set by coordinator)
# These are set when the coordinator spawns individual consumer containers
# from YAML config files. You don't need to set these manually.
# LDES=http://example.com/ldes-feed
# SPARQL_ENDPOINT=http://graphdb:7200/repositories/kgap/statements
# SHAPE=
# TARGET_GRAPH=
# FOLLOW=true
# MATERIALIZE=false
# ORDER=none
# POLLING_FREQUENCY=5000
# FAILURE_IS_FATAL=false
# CONCURRENT_FETCHES=10
# FOR_VIRTUOSO=false
# QUERY_TIMEOUT=1800
# LAST_VERSION_ONLY=false
