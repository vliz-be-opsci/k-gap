# docker compose env variables
COMPOSE_PROJECT_NAME=kgap

#graphdb env variables
GDB_REPO=kgap
REPOLABEL=label_repo_here
GDB_HOME_FOLDER=/opt/graphdb/home
GDB_MAX_HEADER=65536
GDB_JAVA_OPTS="-Xms8g -Xmx16g -Dcom.ontotext.graphdb.monitoring.jmx=true"

#jupyter env variables
SRC_FOLDER=/kgap/notebooks

# sembench env variables
# NOTE -- these deprecated variants:
# INPUT_DATA_LOCATION=/data
# OUTPUT_DATA_LOCATION=/data
# SEMBENCH_DATA_LOCATION=/data
# NOTE -- should be changed to:
SEMBENCH_INPUT_PATH=/data
SEMBENCH_OUTPUT_PATH=/data
SEMBENCH_HOME_PATH=/data
SEMBENCH_CONFIG_PATH=/data/sembench.yaml
SCHEDULER_INTERVAL_SECONDS=86400

# ldes-consumer env variables
# Configuration mode options:
# 1. Folder mode: Set LDES_CONFIG_PATH to a directory containing individual YAML files
#    Example: LDES_CONFIG_PATH=/data/ldes-feeds
# 2. Legacy mode: Set LDES_CONFIG_PATH to a single YAML file
#    Example: LDES_CONFIG_PATH=/data/ldes-feeds.yaml
# 3. Direct mode: Leave LDES_CONFIG_PATH unset and use direct environment variables
#    Required: LDES, SPARQL_ENDPOINT
#    Optional: SHAPE, TARGET_GRAPH, FOLLOW, MATERIALIZE, etc.

# Folder or file path for LDES configuration (leave empty for direct mode)
LDES_CONFIG_PATH=/data/ldes-feeds

# Docker image to use for ldes2sparql containers (folder/legacy modes only)
LDES2SPARQL_IMAGE=ghcr.io/rdf-connect/ldes2sparql:latest

# Logging level
LOG_LEVEL=INFO

# Direct mode environment variables (only used if LDES_CONFIG_PATH is not set)
# LDES=http://example.com/ldes-feed
# SPARQL_ENDPOINT=http://graphdb:7200/repositories/kgap/statements
# SHAPE=
# TARGET_GRAPH=
# FOLLOW=true
# MATERIALIZE=false
# ORDER=none
# POLLING_FREQUENCY=5000
# FAILURE_IS_FATAL=false
# CONCURRENT_FETCHES=10
# FOR_VIRTUOSO=false
# QUERY_TIMEOUT=1800
# LAST_VERSION_ONLY=false
